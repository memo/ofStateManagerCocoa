{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\vieww9600\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural

\f0\fs24 \cf0 ofStateManagerCocoa by Memo Akten\
{\field{\*\fldinst{HYPERLINK "https://github.com/memo/ofStateManagerCocoa"}}{\fldrslt https://github.com/memo/ofStateManagerCocoa}}\
\
Cocoa GUI wrapper for Christoph Buchner's ofStateManager\
{\field{\*\fldinst{HYPERLINK "https://github.com/bilderbuchi/ofStateManager"}}{\fldrslt https://github.com/bilderbuchi/ofStateManager}}\
\
context:\
{\field{\*\fldinst{HYPERLINK "http://forum.openframeworks.cc/index.php/topic,11559.msg51285.html"}}{\fldrslt http://forum.openframeworks.cc/index.php/topic,11559.msg51285.html}}\
\
\
In summary, this is a tool to - for any selected openFrameworks project:  \
\
1. Record a snapshot of the state (i.e. git commit ID) for every involved component for the project (the project itself, openFrameworks, and any used addons). This state information is stored in a JSON file, by default, along with the project in the project folder. \
\
2. Later, load that JSON file and restore the states for all involved components - effectively reverting all components to the states which were known to compile and run successfully for that particular project. \
\
3. Similar, later load that JSON file, restore the states for all involved components but copying and collecting them into a separate folder; creating a self-contained archive of your project and all required components. As a stand-alone, minimal (containing only the files you need) source repository, ready for backing up or distributing.  \
\
\
Instructions\
===================\
\
Place bilderbuchi's ofStateManager folder containing the python scripts next to the ofStateManagerCocoa.app application bundle, and run ofStateManagerCocoa.app. \
\
i.e. the folder structure should be:   \
./ofStateManagerCocoa.app   \
./ofStateManager/  \
./ofStateManager/ofStateManager.py etc.\
\
The GUI is pretty straightforward and just reflects the python script parameters. Refer to bilderbuchi's instructions. \
\
}